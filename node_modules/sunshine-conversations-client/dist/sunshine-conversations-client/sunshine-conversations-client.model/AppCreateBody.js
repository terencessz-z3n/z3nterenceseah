"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _AppSettings = _interopRequireDefault(require("./AppSettings"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 12.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */
/**
 * The AppCreateBody model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/AppCreateBody
 * @version 12.5.0
 */
var AppCreateBody = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AppCreateBody</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/AppCreateBody
   * @param displayName {String} The friendly name of the app.
   */
  function AppCreateBody(displayName) {
    _classCallCheck(this, AppCreateBody);
    AppCreateBody.initialize(this, displayName);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(AppCreateBody, [{
    key: "getDisplayName",
    value:
    /**
         * Returns The friendly name of the app.
         * @return {String}
         */
    function getDisplayName() {
      return this.displayName;
    }

    /**
     * Sets The friendly name of the app.
     * @param {String} displayName The friendly name of the app.
     */
  }, {
    key: "setDisplayName",
    value: function setDisplayName(displayName) {
      this['displayName'] = displayName;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/AppSettings}
         */
  }, {
    key: "getSettings",
    value: function getSettings() {
      return this.settings;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/AppSettings} settings
     */
  }, {
    key: "setSettings",
    value: function setSettings(settings) {
      this['settings'] = settings;
    }
    /**
         * Returns Flat object containing custom properties. Strings, numbers and booleans  are the only supported format that can be passed to metadata. The metadata is limited to 4KB in size. 
         * @return {Object}
         */
  }, {
    key: "getMetadata",
    value: function getMetadata() {
      return this.metadata;
    }

    /**
     * Sets Flat object containing custom properties. Strings, numbers and booleans  are the only supported format that can be passed to metadata. The metadata is limited to 4KB in size. 
     * @param {Object} metadata Flat object containing custom properties. Strings, numbers and booleans  are the only supported format that can be passed to metadata. The metadata is limited to 4KB in size. 
     */
  }, {
    key: "setMetadata",
    value: function setMetadata(metadata) {
      this['metadata'] = metadata;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, displayName) {
      obj['displayName'] = displayName;
    }

    /**
     * Constructs a <code>AppCreateBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/AppCreateBody} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/AppCreateBody} The populated <code>AppCreateBody</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AppCreateBody();
        if (data.hasOwnProperty('displayName')) {
          obj['displayName'] = _ApiClient["default"].convertToType(data['displayName'], 'String');
        }
        if (data.hasOwnProperty('settings')) {
          obj['settings'] = _AppSettings["default"].constructFromObject(data['settings']);
        }
        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], Object);
        }
      }
      return obj;
    }
  }]);
}();
/**
 * The friendly name of the app.
 * @member {String} displayName
 */
AppCreateBody.prototype['displayName'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/AppSettings} settings
 */
AppCreateBody.prototype['settings'] = undefined;

/**
 * Flat object containing custom properties. Strings, numbers and booleans  are the only supported format that can be passed to metadata. The metadata is limited to 4KB in size. 
 * @member {Object} metadata
 */
AppCreateBody.prototype['metadata'] = undefined;
var _default = exports["default"] = AppCreateBody;