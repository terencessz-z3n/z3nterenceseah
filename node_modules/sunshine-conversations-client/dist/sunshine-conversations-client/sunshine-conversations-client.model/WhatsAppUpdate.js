"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _IntegrationUpdateBase = _interopRequireDefault(require("./IntegrationUpdateBase"));
var _WhatsAppUpdateAllOf = _interopRequireDefault(require("./WhatsAppUpdateAllOf"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Sunshine Conversations API
 *
 * The version of the OpenAPI document: 12.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */
/**
 * The WhatsAppUpdate model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/WhatsAppUpdate
 * @version 12.5.0
 */
var WhatsAppUpdate = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>WhatsAppUpdate</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/WhatsAppUpdate
   * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/IntegrationUpdateBase
   * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/WhatsAppUpdateAllOf
   */
  function WhatsAppUpdate() {
    _classCallCheck(this, WhatsAppUpdate);
    _IntegrationUpdateBase["default"].initialize(this);
    _WhatsAppUpdateAllOf["default"].initialize(this);
    WhatsAppUpdate.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(WhatsAppUpdate, [{
    key: "getDisplayName",
    value:
    /**
         * Returns A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
         * @return {String}
         */
    function getDisplayName() {
      return this.displayName;
    }

    /**
     * Sets A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
     * @param {String} displayName A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
     */
  }, {
    key: "setDisplayName",
    value: function setDisplayName(displayName) {
      this['displayName'] = displayName;
    }
    /**
         * Returns Specify a fallback language to use when sending WhatsApp message template using the short hand syntax. Defaults to en_US. See WhatsApp documentation for more info.
         * @return {String}
         */
  }, {
    key: "getHsmFallbackLanguage",
    value: function getHsmFallbackLanguage() {
      return this.hsmFallbackLanguage;
    }

    /**
     * Sets Specify a fallback language to use when sending WhatsApp message template using the short hand syntax. Defaults to en_US. See WhatsApp documentation for more info.
     * @param {String} hsmFallbackLanguage Specify a fallback language to use when sending WhatsApp message template using the short hand syntax. Defaults to en_US. See WhatsApp documentation for more info.
     */
  }, {
    key: "setHsmFallbackLanguage",
    value: function setHsmFallbackLanguage(hsmFallbackLanguage) {
      this['hsmFallbackLanguage'] = hsmFallbackLanguage;
    }
    /**
         * Returns The business ID associated with the WhatsApp account. In combination with accountManagementAccessToken, it’s used for Message Template Reconstruction.
         * @return {String}
         */
  }, {
    key: "getAccountId",
    value: function getAccountId() {
      return this.accountId;
    }

    /**
     * Sets The business ID associated with the WhatsApp account. In combination with accountManagementAccessToken, it’s used for Message Template Reconstruction.
     * @param {String} accountId The business ID associated with the WhatsApp account. In combination with accountManagementAccessToken, it’s used for Message Template Reconstruction.
     */
  }, {
    key: "setAccountId",
    value: function setAccountId(accountId) {
      this['accountId'] = accountId;
    }
    /**
         * Returns An access token associated with the accountId used to query the WhatsApp Account Management API. In combination with accountId, it’s used for Message Template Reconstruction.
         * @return {String}
         */
  }, {
    key: "getAccountManagementAccessToken",
    value: function getAccountManagementAccessToken() {
      return this.accountManagementAccessToken;
    }

    /**
     * Sets An access token associated with the accountId used to query the WhatsApp Account Management API. In combination with accountId, it’s used for Message Template Reconstruction.
     * @param {String} accountManagementAccessToken An access token associated with the accountId used to query the WhatsApp Account Management API. In combination with accountId, it’s used for Message Template Reconstruction.
     */
  }, {
    key: "setAccountManagementAccessToken",
    value: function setAccountManagementAccessToken(accountManagementAccessToken) {
      this['accountManagementAccessToken'] = accountManagementAccessToken;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>WhatsAppUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/WhatsAppUpdate} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/WhatsAppUpdate} The populated <code>WhatsAppUpdate</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new WhatsAppUpdate();
        _IntegrationUpdateBase["default"].constructFromObject(data, obj);
        _WhatsAppUpdateAllOf["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('displayName')) {
          obj['displayName'] = _ApiClient["default"].convertToType(data['displayName'], 'String');
        }
        if (data.hasOwnProperty('hsmFallbackLanguage')) {
          obj['hsmFallbackLanguage'] = _ApiClient["default"].convertToType(data['hsmFallbackLanguage'], 'String');
        }
        if (data.hasOwnProperty('accountId')) {
          obj['accountId'] = _ApiClient["default"].convertToType(data['accountId'], 'String');
        }
        if (data.hasOwnProperty('accountManagementAccessToken')) {
          obj['accountManagementAccessToken'] = _ApiClient["default"].convertToType(data['accountManagementAccessToken'], 'String');
        }
      }
      return obj;
    }
  }]);
}();
/**
 * A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
 * @member {String} displayName
 */
WhatsAppUpdate.prototype['displayName'] = undefined;

/**
 * Specify a fallback language to use when sending WhatsApp message template using the short hand syntax. Defaults to en_US. See WhatsApp documentation for more info.
 * @member {String} hsmFallbackLanguage
 * @default 'en_US'
 */
WhatsAppUpdate.prototype['hsmFallbackLanguage'] = 'en_US';

/**
 * The business ID associated with the WhatsApp account. In combination with accountManagementAccessToken, it’s used for Message Template Reconstruction.
 * @member {String} accountId
 */
WhatsAppUpdate.prototype['accountId'] = undefined;

/**
 * An access token associated with the accountId used to query the WhatsApp Account Management API. In combination with accountId, it’s used for Message Template Reconstruction.
 * @member {String} accountManagementAccessToken
 */
WhatsAppUpdate.prototype['accountManagementAccessToken'] = undefined;

// Implement IntegrationUpdateBase interface:
/**
 * A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
 * @member {String} displayName
 */
_IntegrationUpdateBase["default"].prototype['displayName'] = undefined;
// Implement WhatsAppUpdateAllOf interface:
/**
 * Specify a fallback language to use when sending WhatsApp message template using the short hand syntax. Defaults to en_US. See WhatsApp documentation for more info.
 * @member {String} hsmFallbackLanguage
 * @default 'en_US'
 */
_WhatsAppUpdateAllOf["default"].prototype['hsmFallbackLanguage'] = 'en_US';
/**
 * The business ID associated with the WhatsApp account. In combination with accountManagementAccessToken, it’s used for Message Template Reconstruction.
 * @member {String} accountId
 */
_WhatsAppUpdateAllOf["default"].prototype['accountId'] = undefined;
/**
 * An access token associated with the accountId used to query the WhatsApp Account Management API. In combination with accountId, it’s used for Message Template Reconstruction.
 * @member {String} accountManagementAccessToken
 */
_WhatsAppUpdateAllOf["default"].prototype['accountManagementAccessToken'] = undefined;
var _default = exports["default"] = WhatsAppUpdate;